make clean
b ej1.asm:48
r
p rax
p $rax
p *$rax
p *$rax[0]
p $rax[0]
p $rax+4
p *($rax+4)
p *($rax+8)
p *($rax+12)
n
p $rsi
n
p $rdi
p *$rdi
p (pago_t) $rdi
p (pago_t) *$rdi
p (pago_t*) $rdi
p (pago_t) $rdi
p (pago_t)* $rdi
p (pago_t)* $r14
p $rsi
p $rdi
p (pago_t)* $rdi
n
b ej1.c:36
r
make
r
make
r
make
r
x/s pagos
x pagos
x (pago_t**) pagos
p (pago_t**) pagos
p (pago_t) **pagos
p (pago_t) *\pagos
p (pago_t) *pagos
make
r
p (pago_t) *pagos
p (pago_t) **pagos
p (pago_t) *pagos[0]
p (pago_t) *(pagos[0])
p (pago_t) *(pagos)
make
r
p (pago_t) *(pagos)
p (pago_t) *(pmakeagos)
make
r
n
p pago
n
en_blacklist(pago.comercio, arr_comercios, size_comercios)
p en_blacklist(pago.comercio, arr_comercios, size_comercios)
p pago.comercio
p arr_comercio
p arr_comercio[0
p arr_comercio[0]
p/s arr_comercios[0]
p/s arr_comercios
p arr_comercios
x arr_comercios
p arr_comercios[0]
p arr_comercios[1]
p arr_comercios[2]
n
p pagos
p (pago_t) *pagos
p (pago_t) **pagos
n
p pagos[0]
p (pago_t) *pagos[0]
n
b ej1.c:37
r
c
p (pago_t) *pagos[2]
p (pago_t) *pagos[1]
p (pago_t) *pagos[0]
c
p (pago_t) *pagos[0]
c
p (pago_t) *pagos[1]
p (pago_t) *pagos[2]
c
p (pago_t) *pagos[3]
c
c
p (pago_t) *pagos[4]
p (pago_t) *pagos[6]
p (pago_t) *pagos[3]
p (pago_t) *pagos[4]
p (pago_t) *pagos[4]
c
p (pago_t) *pagos[6]
p (pago_t) *pagos[8]
p (pago_t) *pagos[7]
c
r
c
c
p i
p cantidad_pagos
c
p cantidad_pagos
p i
c
p i
r
c
p i
c
r
y
c
p i
c
p i
c
p i
c
p i
p index_pagos
n
n
n
p pago
p index_pagos
p pagos
p pagos[0]
p *pagos[0]
p *pagos[1]
p *pagos[2]
p *pagos[3]
p *pagos[4]
b ej1.asm
b ej1.asm:51
r
n
p $rdi
p *$rdi
n
p *$rdi
p $rdi
b ej1.asm:32
r
b ej1.asm:68
b delete
b -d
b ej1.asm:58
r
n
p (pago_t) *($r14 + $rsi)
n
n
p (pago_t) *($r14 + $rsi)
n
p (pago_t) *($r14 + $rsi)
n
c
c
p $r13
p $r15
c
p $r15
p $r13
n
b ej1.asm:58
r
p *($r14 + $rsi + 17)
p (pago_t) *($r14 + $rsi + 17)
p (pago_t) *($r14)
p (pago_t) *($r14+ 17)
p *($r14+ 17)
p $rski
p $rsi
p $14
p *$r14
p (pago_t)*$r14
p (uint8_t)*$r14
n
b ej1.asm:32
r
n
p r14
p $r14
p *$r14
p (pago_t) *$r14
p $r15
n
n
p uint32_t *$rax
p (uint32_t) *$rax
p (uint32_t) *$rax[0]
p (uint32_t) $rax[0]
p (uint32_t) $rax[1]
p $rax[1]
x $rax[1]
n
n
p *$rax
p *$rax+4
p *($rax+4)
p *($rax+8)
p *($rax+12)
p *($rax+20)
p *($rax+50)
p *($rax+90)
p *($rax+1000)
n
p *($rax)
p *($rax+1)
p *($rax)
p $rax
n
p $rsi
n
p $rdi
p *$rdi
r
n
p *$r14
p *$rsi
p (pago_t) *$rsi
p (pago_t) *$r14
b ej1.asm:55
c
p (pago_t) *$r14
p $rsi
n
p $rdi
p* $rdi
p *$rdi
p (pago_t) *$rdi
p *$rdi
p (pago_t) *$rdi
p (pago_t) *$r14
